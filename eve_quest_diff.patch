diff --git a/DUMMY_EVE.txt b/DUMMY_EVE.txt
deleted file mode 100644
index 33b1bae..0000000
--- a/DUMMY_EVE.txt
+++ /dev/null
@@ -1 +0,0 @@
-# Puff of smoke! üê≤
diff --git a/project.log b/project.log
index 8072353..edf1bdc 100644
--- a/project.log
+++ b/project.log
@@ -2,3 +2,135 @@
 2025-08-09 01:52:36 | ERROR | src.file_system | Error reading file agent.py: [Errno 2] No such file or directory: 'agent.py'
 2025-08-09 01:58:08 | ERROR | src.file_system | Error reading file a_non_existent_file.txt: [Errno 2] No such file or directory: 'a_non_existent_file.txt'
 2025-08-09 01:58:30 | ERROR | src.file_system | Error writing file /root/dragon_treasure.txt: [Errno 30] Read-only file system: '/root'
+2025-08-09 02:34:29 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:29 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:30 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:31 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:31 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:31 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:31 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:31 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:31 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:34:32 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:50 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:51 | ERROR | src.llm | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:51 | ERROR | src.terminal | Eve:  I have encountered an error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:36:51 | ERROR | agent | LLM API error: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'ResponseBody': In context=('properties', 'line_range_1'), array schema missing items.", 'type': 'invalid_request_error', 'param': 'text.format.schema', 'code': 'invalid_json_schema'}}
+2025-08-09 02:41:21 | ERROR | src.file_system | Error reading file eve.txt: [Errno 2] No such file or directory: 'eve.txt'
+2025-08-09 02:41:23 | ERROR | src.file_system | Error reading file eve.txt: [Errno 2] No such file or directory: 'eve.txt'
+2025-08-09 02:55:28 | ERROR | src.file_system | Error reading file DUMM_EVE.txt: [Errno 2] No such file or directory: 'DUMM_EVE.txt'
+2025-08-09 02:55:52 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:00 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:07 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:16 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:24 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:33 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:42 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:49 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:56:57 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:57:05 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:57:12 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:57:21 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:57:30 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:57:37 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:57:52 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:58:22 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:58:31 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:58:39 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:58:57 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:59:03 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:59:13 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:59:48 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 02:59:56 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:00:04 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:00:20 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:00:30 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:00:39 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:00:49 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:00:58 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:01:06 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:01:19 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:01:29 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:01:37 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:01:46 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:01:54 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:02:04 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:03:18 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:03:25 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:04:45 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:04:58 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:05:08 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:06:34 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:06:41 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:06:49 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
+2025-08-09 03:06:57 | ERROR | src.file_system | Error applying diff to DUMMY_EVE.txt: 'collections.OrderedDict' object has no attribute 'startswith'
diff --git a/requirements.txt b/requirements.txt
index e69de29..2573819 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -0,0 +1,5 @@
+openai
+colorama
+python-dotenv
+pydantic
+argparse
diff --git a/src/agent.py b/src/agent.py
index 394c4e0..f3bfe12 100644
--- a/src/agent.py
+++ b/src/agent.py
@@ -95,7 +95,7 @@ class Agent:
                 if file_action == 0:  # Read
                     self.terminal.print_agent_message(f"Reading file: {file_name}")
                     file_content = self.file_system.read_file(file_name)
-                    self.context.append({"File Read": file_content, "Action Description": llm_response.action_description})
+                    self.context.append({"File Read Finished": file_content, "Action Description": llm_response.action_description})
                     # Log AFTER the action
                     logger.info(f"Read file: {file_name} for description: {llm_response.action_description}")
                 else:
@@ -137,6 +137,7 @@ class Agent:
                 self.terminal.print_agent_message(f"Action Description: {llm_response.action_description}")
                 self.terminal.print_agent_message(f"Inserting diff into file: {llm_response.file_name}")
                 diff = llm_response.diff
+                print(f"Diff to insert: {diff}")
                 self.file_system.insert_diff(llm_response.file_name, diff)
                 self.context.append({"Diff Insertion Complete": diff, "File Name": llm_response.file_name, "Action Description": llm_response.action_description})
                 logger.info(f"Diff inserted into file: {llm_response.file_name} | Diff: {diff}")
diff --git a/src/file_system.py b/src/file_system.py
index 760200c..b392178 100644
--- a/src/file_system.py
+++ b/src/file_system.py
@@ -2,17 +2,35 @@ from pathlib import Path
 from src.logging_config import setup_logger
 import subprocess
 import tempfile
+import difflib
 from pathlib import Path
+from schema import Diff
+from collections import OrderedDict
 
 class FileHandler:
     def __init__(self):
         self.logger = setup_logger(__name__)
 
-    def read_file(self, filename: str) -> str:
+    def read_file(self, filename: str) -> dict:
+        try:
+            with open(filename, 'r') as file:
+                lines = file.readlines()
+
+            line_dict = OrderedDict()
+            for i, line in enumerate(lines, 1):
+                line_dict[i] = line.rstrip()
+                        
+            self.logger.info(f"Read file as line dict: {filename}")
+            return line_dict
+        except Exception as e:
+            self.logger.error(f"Error reading file {filename}: {e}")
+            return {"error": f"Error reading file: {e}"}
+
+    def read_as_str(self, filename: str) -> str:
         try:
             with open(filename, 'r') as file:
                 content = file.read()
-            self.logger.info(f"Read from file: {filename}")
+            self.logger.info(f"Read file as string: {filename}")
             return content
         except Exception as e:
             self.logger.error(f"Error reading file {filename}: {e}")
@@ -27,24 +45,51 @@ class FileHandler:
         except Exception as e:
             self.logger.error(f"Error writing file {filename}: {e}")
             return f"Error writing file: {e}"
-
-
-    def insert_diff(self, filename: str, diff: str) -> str:
-        # Ensure file path is absolute
-        file_path = Path(filename).resolve()
-
-        # Write diff to a temporary file
-        with tempfile.NamedTemporaryFile(mode="w", delete=False) as tmp:
-            tmp.write(diff)
-            tmp_path = tmp.name
-
+            
+    def insert_diff(self, filename: str, diff: Diff) -> str:
         try:
-            subprocess.run(
-                ["patch", "-u", str(file_path), "-i", tmp_path],
-                check=True,
-                capture_output=True,
-                text=True
-            )
+            print(f"Applying diff to file: {filename} with diff: {diff}")
+            content = self.read_as_str(filename)
+            if content.startswith("Error reading file:"):
+                return f"Error reading file for diff: {content}"
+                        
+            lines = content.splitlines()
+            total_lines = len(lines)
+            
+            # Validate line ranges
+            start_line = max(0, diff.line_range_1[0] - 1)  # Convert to 0-based, ensure >= 0
+            end_line = min(total_lines - 1, diff.line_range_1[1] - 1)  # Ensure <= max line
+            
+            # Additional validation
+            if start_line > total_lines:
+                return f"Error: Start line {diff.line_range_1[0]} exceeds file length ({total_lines} lines)"
+                        
+            if diff.Add:
+                # Insert new lines at specified position
+                new_lines = diff.content.splitlines() if hasattr(diff, 'content') and diff.content else []
+                lines[start_line:start_line] = new_lines
+                            
+            elif diff.Remove:
+                # Remove lines in the specified range
+                if start_line <= end_line:  # Only remove if valid range
+                    del lines[start_line:end_line + 1]
+                            
+            elif diff.Replace:
+                # Replace lines in range with new content
+                new_lines = diff.content.splitlines() if hasattr(diff, 'content') and diff.content else []
+                if start_line <= end_line:  # Only replace if valid range
+                    lines[start_line:end_line + 1] = new_lines
+                        
+            new_content = '\n'.join(lines)
+            result = self.write_file(filename, new_content)
+            
+            # Check if write_file returned an error
+            if result and result.startswith("Error writing file:"):
+                return result
+                
+            self.logger.info(f"Applied diff to file: {filename}")
             return f"Applied diff to file: {filename}"
-        except subprocess.CalledProcessError as e:
-            return f"Failed to apply diff: {e.stderr or e.stdout}"
+                    
+        except Exception as e:
+            self.logger.error(f"Error applying diff to {filename}: {e}")
+            return f"Error applying diff: {e}"
\ No newline at end of file
diff --git a/src/prompt.py b/src/prompt.py
index f224156..4841898 100644
--- a/src/prompt.py
+++ b/src/prompt.py
@@ -15,7 +15,18 @@ ResponseBody(BaseModel):
     write_content: str
     finished : bool=False
     response: str # In case of action 2
-    diff: str
+    diff: Diff
+               
+class Diff(BaseModel):
+    line_range_1: tuple[int, int] # (for insertion, deletion)
+    line_range_2: tuple[int, int]  # (for replacement etc)
+    Add: bool
+    Remove: bool
+    Replace: bool
+    content: str
+**NOTE**       
+Only 1 of Add, Remove, Replace can be True.
+
 you can only have 1 action at a time.
            
 where action is 0 for file system  1 for shell command, 2 for an agent response (to a user query, or asking for clarification), and 3 for diff insertion(give a filename and a diff we will insert it). File_action is 0 for read and 1 for write.
diff --git a/src/schema.py b/src/schema.py
index cad911e..27f7148 100644
--- a/src/schema.py
+++ b/src/schema.py
@@ -3,6 +3,14 @@
 from pydantic import BaseModel
 from typing import Optional
 
+class Diff(BaseModel):
+    line_range_1: list[int]
+    line_range_2: list[int]
+    Add: bool
+    Remove: bool
+    Replace: bool
+    content: str
+
 class ResponseBody(BaseModel):
     action_description: str
     shell_command: str
@@ -12,7 +20,7 @@ class ResponseBody(BaseModel):
     finished: bool = False
     response: Optional[str] = None
     action: int
-    diff: str
+    diff: Diff
 
 # You can add additional pydantic models/types/functions here as needed.
 # If you require 'base_prompt', import it using absolute import, e.g.,
